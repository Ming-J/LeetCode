#include <iostream>
#include <vector>
using namespace std;

int woodHelp(vector< pair<int,int> > &woods, int i, int highest){
  if(i < woods.size()){
    if(highest >= woods[i].first){
      return 0;
    }
    int fall = max( woodHelp(woods,i+1, woods[i].first),
		    woodHelp(woods,i+1, highest + woods[i].second));
    fall = max( fall,
		woodHelp(woods,i+1, woods[i].first));
    return fall+1;
  }
  return 0;
}

int woodcut(vector< pair<int,int> > woods){
  return woodHelp(woods,0,0);
} 

int main(){
  int n, tree, length;
  vector<pair<int,int> >woods;
  cin>>n;
  for(int i = 0; i < n; ++i){
    cin>>tree>>length;
    woods.push_back({tree,length});
  }
  cout<<woodcut(woods)<<endl;
}
